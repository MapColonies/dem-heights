global:
  cloudProvider: {}
  tracing: {}
  metrics: {}
  environment: ''

enabled: true
environment: development
replicaCount: 1
initialDelaySeconds: 60
nodePort: 30030 #for minikube deployment only
resetOnConfigChange: true
imagePullPolicy: Always
splunkIndex: ''

cloudProvider:
  dockerRegistryUrl: my-registry-url.io
  imagePullSecretName: my-registry-secret
  flavor: openshift

caSecretName: ''
caPath: /usr/local/share/ca-certificates
caKey: ca.crt

image:
  repository: dem-heights
  tag: v1.0.2

accessToken: 
  attributeName: token
  injectionType: queryParam
  tokenValue: TOKEN

env:
  port: 8080
  targetPort: 8000
  protocol: TCP
  logLevel: info
  logPrettyPrintEnabled: false
  responseCompressionEnabled: true
  requestPayloadLimit: 8mb
  tracing:
    enabled: true
    url: http://otel-collector:4318/v1/traces
  metrics:
    enabled: true
    url: http://otel-collector:4318/v1/metrics
    prometheus:
      scrape: true
      port: 8000
    buckets:
      - 1
      - 10
      - 50
      - 100
      - 150
      - 250
  cswDemUrl: ''
  s3GatewayDemUrl: ''
  synchRecordsInterval: 600000
  protoFileUrl: ''
  serviceVersion: ''
  maximumTilesPerRequest: 250

resources:
  enabled: true
  value:
    limits:
      cpu: 1000m
      memory: 500Mi
    requests:
      cpu: 250m
      memory: 500Mi

nginx:
  enabled: true
  fullnameOverride: "dem-serving-heights-nginx"
  replicaCount: 1
  image:
    repository: nginx
    tag: latest
  port: 8080
  targetPort: 80
  nodePort: 30001
  nginx:
    maxAge: '3600'
  authorization:
    enabled: true
    domain: dem
    url: http://opa-int-opa-service.infra-services/v1/data/http/authz/decision
    # url: http://opa.service/v1/data/http/authz/decision
  opentelemetry:
    serviceName: nginx
    samplerMethod: AlwaysOff
    exporterPort: 4317
    ratio: 10
  additionalPodAnnotations:
    co.elastic.logs/enabled: 'true'
    co.elastic.logs/module: 'nginx'
    co.elastic.logs/fileset.stdout: 'access'
    co.elastic.logs/fileset.stderr: 'error'
  extraVolumes:
    - name: nginx-config
      configMap:
        name: "{{ .Release.Name }}-nginx-configmap"
  extraVolumeMounts:
    - name: nginx-config
      mountPath: "/etc/nginx/conf.d/default.conf"
      subPath: default.conf
    - name: nginx-config
      mountPath: "/etc/nginx/nginx.conf"
      subPath: nginx.conf
    - name: nginx-config
      mountPath: "/etc/nginx/log_format.conf"
      subPath: log_format.conf
  resources:
    enabled: true
    value:
      limits:
        cpu: 500m
        memory: 900Mi
      requests:
        cpu: 125m
        memory: 900Mi

  route:
    enabled: true
    routesMapping:
      - host:
        path: /api/heights/v1
    timeout:
      enabled: false # defaults to 30s by openshift
      duration: 60s # supported units (us, ms, s, m, h, d)
    rewriteTarget: /
    tls:
      enabled: false
      useCert: false
      certificate: ""
      key: ""
      caCertificate: ""

  ingress:
    enabled: false
    type: nginx-org # supported values: 'nginx-org' | 'nginx-kubernetes'
    ingressMapping:
      - host:
        path: /dem-heights
    tls:
      enabled: false
      secretName: ingress-tls-secret
