kubeVersion:
commonLabels:
commonAnnotations:
serviceAccount:
  create: false
  name: ''
  annotations: {}
  automountServiceAccountToken: false
# ----------- initContainers -----------
volumePermissions:
  enabled: true
  image:
    # registry: docker.io
    repository: bitnami/os-shell
    tag: 12-debian-12-r-IMAGE_REVISION
    pullPolicy: IfNotPresent
    pullSecrets: 
      # - pull-secret
  containerSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 1001
    # seLinuxOptions: {}
  resources:
  resourcesPreset: nano
# ------ volumes and volumeMounts ------
persistence:
  enabled: true
  mountPath: /data
  subPath:
  storageClass:
  annotations:
  accessModes:
    - ReadWriteOnce
  size: 8Gi
  existingClaim:
  selector:
  dataSource:
# ------------ command/debug -----------
diagnosticMode:
  enabled: true
  command:
    - sleep
  args:
    - infinity


# ----------- MAIN_OBJECT_BLOCK ----------

configValues:
  deploymentAnnotations:
    # collectord.io/index: '' # PROVIDE SPLUNK INDEX
  autoscaling:
    hpa:
      enabled: false
  replicaCount: 1
  updateStrategy:
  podLabels:
  podAnnotations:
    enabled: true
    resetOnConfigChange: true
    annotations:
  tracing:
    enabled: true
    url: http://otel-collector:4318/v1/traces
  metrics:
    enabled: true
    url: http://otel-collector:4318/v1/metrics
    prometheus:
      scrape: true
      port: 8000
    buckets:
      - 1
      - 10
      - 50
      - 100
      - 150
      - 250
  automountServiceAccountToken: false
  hostAliases: 
    # - ip: "127.0.0.1"
    #   hostnames:
    #   - "foo.local"
    #   - "bar.local"
    # - ip: "10.1.2.3"
    #   hostnames:
    #   - "foo.remote"
    #   - "bar.remote"
  affinity:
  podAffinityPreset:
  podAntiAffinityPreset: soft
  nodeAffinityPreset: {}
    # type: ''
    # key: ''
    # values: []
  nodeSelector:
  tolerations: 
    # - key: foo
    #   operator: Equal
    #   value: bar
  priorityClassName:
  schedulerName:
  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: DoNotSchedule
      labelSelector:
        matchLabels:
          app.kubernetes.io/name: heights
  podSecurityContext:
    enabled: false
    fsGroup: 1001
    fsGroupChangePolicy: Always
    sysctls:
    supplementalGroups:
  terminationGracePeriodSeconds:
  # ----- initContainers (custom) -----
  initContainers:
  # ----------- containers ------------
  image:
    # registry: docker.io
    repository: dem-heights
    tag: v2.1.7
    pullPolicy: IfNotPresent
    pullSecrets:
    debug: false
  containerSecurityContext:
    enabled: false
    runAsNonRoot: true
    runAsUser: 1001
    # seLinuxOptions: {}
  command:
    # - sleep
  args:
    # - infinity
  extraEnvVars:
  extraEnvVarsCM:
  extraEnvVarsSecret:
  resources:
  resourcesPreset:
  containerPorts:
    http: 80
    https: 443
  customLivenessProbe:
  livenessProbe:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
  customReadinessProbe:
  readinessProbe:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
  customStartupProbe:
  startupProbe:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
  lifecycleHooks:
  extraVolumes:
  extraVolumeMounts:
  sidecars:








global:
  cloudProvider: {}
  tracing: {}
  metrics: {}
  environment: development

enabled: true
replicaCount: 1
initialDelaySeconds: 60
nodePort: 30030 #for minikube deployment only
resetOnConfigChange: true
imagePullPolicy: Always
splunkIndex: ''

cloudProvider:
  dockerRegistryUrl: my-registry-url.io
  imagePullSecretName: my-registry-secret
  flavor: openshift

caSecretName: ''
caPath: /usr/local/share/ca-certificates
caKey: ca.crt

image:
  repository: dem-heights
  tag: v1.0.2

authentication:
  jwtPublicKeySecretName: map-colonies-jwks
  opa:
    enabled: false
    customHeaderName: x-api-key

accessToken: 
  attributeName: token
  injectionType: queryParam
  tokenValue: TOKEN

env:
  port: 8080
  targetPort: 8000
  protocol: TCP
  logLevel: info
  logPrettyPrintEnabled: false
  responseCompressionEnabled: true
  requestPayloadLimit: 8mb
  tracing:
    enabled: true
    url: http://otel-collector:4318/v1/traces
  metrics:
    enabled: true
    url: http://otel-collector:4318/v1/metrics
    prometheus:
      scrape: true
      port: 8000
    buckets:
      - 1
      - 10
      - 50
      - 100
      - 150
      - 250
  cswDemUrl: ''
  s3GatewayDemUrl: ''
  synchRecordsInterval: 600000
  protoFileUrl: ''
  serviceVersion: ''
  maximumTilesPerRequest: 250

resources:
  enabled: true
  value:
    limits:
      cpu: 1000m
      memory: 500Mi
    requests:
      cpu: 250m
      memory: 500Mi

nginx:
  enabled: true
  replicaCount: 1
  image:
    repository: nginx
    tag: merge
  port: 8080
  internalPort: 80
  nodePort: 30001
  resources:
    enabled: true
    value:
      limits:
        cpu: 500m
        memory: 900Mi
      requests:
        cpu: 125m
        memory: 900Mi

opa:
  image: openpolicyagent/opa
  imageTag: 0.29.4-envoy-3
  port: 9191
  enableLogging: false
  resources:
    enabled: true
    value:
      limits:
        cpu: 400m
        memory: 200Mi
      requests:
        cpu: 100m
        memory: 200Mi
        
envoy:
  image: envoyproxy/envoy
  imageTag: v1.20.7
  port: 6565
  maxRequestBytes: 8192
  requestedDomain: dem
  resources:
    enabled: true
    value:
      limits:
        cpu: 500m
        memory: 900Mi
      requests:
        cpu: 125m
        memory: 900Mi

route:
  enabled: true
  https: true
  host:
  path: /api/heights/v1
  timeout:
    enabled: false # defaults to 30s by openshift
    duration: 60s # supported units (us, ms, s, m, h, d)
  useCert: false

ingress:
  enabled: false
  type: nginx-org # supported values: 'nginx-org' | 'nginx-kubernetes'
  tls:
    enabled: false
    useExternal: ''
  host:
  path: /dem-heights
  cors:
    enabled: true
    origin: '*'
