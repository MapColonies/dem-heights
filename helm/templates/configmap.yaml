{{- $COMPONENT_NAME := "backend" -}}

{{- define "confMapData" -}}
{{- $CONFIG_MANAGER_OBJECT := include "common.tplvalues.getGlobalObject" (dict "objName" "configManagment" "context" .) | fromYaml }}
{{- if not $CONFIG_MANAGER_OBJECT.enabled -}}
  production.json: {{ .Files.Get "config/production.json" | quote }}
  ACCESS_TOKEN_ATTRIBUTE_NAME: {{ .Values.accessToken.attributeName | quote }}
  ACCESS_TOKEN_INJECTION_TYPE: {{ .Values.accessToken.injectionType | quote }}
  ACCESS_TOKEN_TOKEN_VALUE: {{ .Values.accessToken.tokenValue | quote }}
  REQUEST_PAYLOAD_LIMIT: {{ .Values.env.requestPayloadLimit | quote }}
  RESPONSE_COMPRESSION_ENABLED: {{ .Values.env.responseCompressionEnabled | quote }}
  CSW_DEM_URL: {{ .Values.env.cswDemUrl | quote }}
  S3_GATEWAY_DEM_URL: {{ .Values.env.s3GatewayDemUrl | quote }}
  SYNCH_RECORDS_INTERVAL: {{ .Values.env.synchRecordsInterval | quote }}
  PROTO_FILE_URL: {{ .Values.env.protoFileUrl | quote }}
  SERVICE_VERSION: {{ .Values.env.serviceVersion | quote }}
  MAXIMUM_TILES_PER_REQUEST: {{ .Values.env.maximumTilesPerRequest | quote }}
{{- end }}
  # BUKU: {{ dig "serving" "heights" "overrideGlobal" "logLevel" "GGGGGG" .Values.global }}
  # MUKU: {{ tpl .Values.global.testTemplated . }}
  MUKU_GLOBAL: {{ include "common.tplvalues.render" ( dict "value" .Values.global.testTemplated "context" . ) }}
  MUKU_GLOBAL_OVERRIDE: {{ include "common.tplvalues.render" ( dict "value" (include "common.tplvalues.getGlobalValue" (dict "propName" "testTemplated" "context" . )) "context" . ) }}
  BUKU: {{ include "common.tplvalues.getGlobalValue" (dict "propName" "releaseVersion" "context" .) | quote}}
  KUKU: {{ include "common.tplvalues.getGlobalValue" (dict "propName" "testGlobalVal" "context" .) | quote}}
{{- end -}}

{{- $DATA := include "confMapData" . -}}
{{ include "mc-chart.configmap" (dict "COMPONENT_NAME" $COMPONENT_NAME "DATA" $DATA "WITH_TELEMETRY_TRACING" true "WITH_TELEMETRY_METRICS" true "context" .) }}

{{/*
{{- if .Values.enabled -}}
{{- $releaseName := .Release.Name -}}
{{- $chartName := include "heights.name" . -}}
{{- $tracingEnabled := include "heights.tracingEnabled" . -}}
{{- $tracingUrl := include "heights.tracingUrl" . -}}
{{- $metricsEnabled := include "heights.metricsEnabled" . -}}
{{- $metricsUrl := include "heights.metricsUrl" . -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $releaseName }}-{{ $chartName }}-configmap
data:
  production.json: {{ .Files.Get "config/production.json" | quote }}
  ACCESS_TOKEN_ATTRIBUTE_NAME: {{ .Values.accessToken.attributeName | quote }}
  ACCESS_TOKEN_INJECTION_TYPE: {{ .Values.accessToken.injectionType | quote }}
  ACCESS_TOKEN_TOKEN_VALUE: {{ .Values.accessToken.tokenValue | quote }}
  REQUEST_PAYLOAD_LIMIT: {{ .Values.env.requestPayloadLimit | quote }}
  RESPONSE_COMPRESSION_ENABLED: {{ .Values.env.responseCompressionEnabled | quote }}
  LOG_LEVEL: {{ .Values.env.logLevel | quote }}
  LOG_PRETTY_PRINT_ENABLED: {{ .Values.env.logPrettyPrintEnabled | quote }}
  {{ if .Values.env.tracing.enabled -}}
  TELEMETRY_TRACING_ENABLED: {{ $tracingEnabled | quote }}
  TELEMETRY_TRACING_URL: {{ $tracingUrl }}
  {{ end -}}
  {{ if .Values.env.metrics.enabled -}}
  TELEMETRY_METRICS_ENABLED: {{ $metricsEnabled | quote }}
  TELEMETRY_METRICS_URL: {{ $metricsUrl }}
  TELEMETRY_METRICS_BUCKETS: {{ .Values.env.metrics.buckets | toJson | quote }}
  {{ end -}}
  CSW_DEM_URL: {{ .Values.env.cswDemUrl | quote }}
  S3_GATEWAY_DEM_URL: {{ .Values.env.s3GatewayDemUrl | quote }}
  SYNCH_RECORDS_INTERVAL: {{ .Values.env.synchRecordsInterval | quote }}
  PROTO_FILE_URL: {{ .Values.env.protoFileUrl | quote }}
  SERVICE_VERSION: {{ .Values.env.serviceVersion | quote }}
  MAXIMUM_TILES_PER_REQUEST: {{ .Values.env.maximumTilesPerRequest | quote }}
{{- end }}
*/}}